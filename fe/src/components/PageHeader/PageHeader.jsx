import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import './PageHeader.css';

const PageHeader = ({ title, breadcrumbs = [], actions = null }) => {
  const location = useLocation();

  // Auto-generate breadcrumbs if not provided
  const autoBreadcrumbs = React.useMemo(() => {
    if (breadcrumbs.length > 0) return breadcrumbs;
    
    const pathSegments = location.pathname.split('/').filter(Boolean);
    const autoGenerated = [{ label: 'Home', path: '/' }];
    
    let currentPath = '';
    pathSegments.forEach((segment, index) => {
      currentPath += `/${segment}`;
      const label = segment.charAt(0).toUpperCase() + segment.slice(1);
      autoGenerated.push({ 
        label, 
        path: currentPath,
        isActive: index === pathSegments.length - 1 
      });
    });
    
    return autoGenerated;
  }, [location.pathname, breadcrumbs]);

  return (
    <div className="page-header">
      <div className="page-header-content">
        <div className="page-header-main">
          {autoBreadcrumbs.length > 1 && (
            <nav className="breadcrumbs">
              {autoBreadcrumbs.map((crumb, index) => (
                <React.Fragment key={crumb.path}>
                  {index > 0 && <span className="breadcrumb-separator">/</span>}
                  {crumb.isActive || index === autoBreadcrumbs.length - 1 ? (
                    <span className="breadcrumb-current">{crumb.label}</span>
                  ) : (
                    <Link to={crumb.path} className="breadcrumb-link">
                      {crumb.label}
                    </Link>
                  )}
                </React.Fragment>
              ))}
            </nav>
          )}
          {title && <h1 className="page-title">{title}</h1>}
        </div>
        {actions && (
          <div className="page-header-actions">
            {actions}
          </div>
        )}
      </div>
    </div>
  );
};

export default PageHeader;
